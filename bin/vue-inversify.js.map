{"version":3,"sources":["webpack://vue-inversify/webpack/universalModuleDefinition","webpack://vue-inversify/webpack/bootstrap","webpack://vue-inversify/./src/index.ts","webpack://vue-inversify/./node_modules/reflect-metadata/Reflect.js","webpack://vue-inversify/./node_modules/process/browser.js","webpack://vue-inversify/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","VueInversify","inject","instance","options","container","mixin","beforeCreate","_this","this","$inject","constructor","keys","forEach","identifier","target","prop","Reflect","getMetadata","TypeError","injectable","process","global","self","Function","exporter","makeExporter","previous","configurable","writable","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","undefined","functionPrototype","getPrototypeOf","usePolyfill","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","next","index","length","result","done","throw","error","return","_cacheKey","_cacheIndex","_find","set","delete","size","clear","getKey","getValue","getEntry","insert","indexOf","push","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","GenRandomBytes","offset","byte","toString","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","keysObj","obj","method","GetMethod","IsCallable","IsObject","GetIterator","k","IteratorStep","nextValue","e","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","isArray","IsConstructor","V","func","f","OrdinaryGetPrototypeOf","proto","prototypeProto","__","decorators","propertyKey","attributes","decorator","decorated","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","parent","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","_i","ownKeys_1","hasKey","_a","parentKeys_1","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","arguments","apply","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g"],"mappings":"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","file":"vue-inversify.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-inversify\"] = factory();\n\telse\n\t\troot[\"vue-inversify\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import 'reflect-metadata';\r\nexport default function VueInversify(instance, options) {\r\n    var container = options.container;\r\n    instance.mixin({\r\n        beforeCreate: function () {\r\n            var _this = this;\r\n            var $inject = this.constructor.$inject;\r\n            if ($inject) {\r\n                Object.keys($inject).forEach(function (key) {\r\n                    Object.defineProperty(_this, key, {\r\n                        enumerable: true,\r\n                        value: container.get($inject[key])\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    });\r\n}\r\nexport function inject(identifier) {\r\n    return function (target, prop) {\r\n        // Try use reflection to generate the identifier if not provided explicitly.\r\n        if (!identifier && typeof (Reflect) !== 'undefined' && typeof (Reflect.getMetadata) === 'function')\r\n            identifier = Reflect.getMetadata('design:type', target, prop);\r\n        if (!identifier)\r\n            throw new TypeError('Unable to resolve identifier; please specify it explicitly');\r\n        var injectable = (typeof (target) === 'function' ? target : target.constructor);\r\n        var $inject = injectable.$inject || (injectable.$inject = {});\r\n        $inject[prop] = identifier;\r\n    };\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n    (function (factory) {\r\n        var root = typeof global === \"object\" ? global :\r\n            typeof self === \"object\" ? self :\r\n                typeof this === \"object\" ? this :\r\n                    Function(\"return this;\")();\r\n        var exporter = makeExporter(Reflect);\r\n        if (typeof root.Reflect === \"undefined\") {\r\n            root.Reflect = Reflect;\r\n        }\r\n        else {\r\n            exporter = makeExporter(root.Reflect, exporter);\r\n        }\r\n        factory(exporter);\r\n        function makeExporter(target, previous) {\r\n            return function (key, value) {\r\n                if (typeof target[key] !== \"function\") {\r\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\r\n                }\r\n                if (previous)\r\n                    previous(key, value);\r\n            };\r\n        }\r\n    })(function (exporter) {\r\n        var hasOwn = Object.prototype.hasOwnProperty;\r\n        // feature test for Symbol support\r\n        var supportsSymbol = typeof Symbol === \"function\";\r\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        var HashMap = {\r\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n            create: supportsCreate\r\n                ? function () { return MakeDictionary(Object.create(null)); }\r\n                : supportsProto\r\n                    ? function () { return MakeDictionary({ __proto__: null }); }\r\n                    : function () { return MakeDictionary({}); },\r\n            has: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key); }\r\n                : function (map, key) { return key in map; },\r\n            get: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n                : function (map, key) { return map[key]; },\r\n        };\r\n        // Load global or shim versions of Map, Set, and WeakMap\r\n        var functionPrototype = Object.getPrototypeOf(Function);\r\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n        // [[Metadata]] internal slot\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n        var Metadata = new _WeakMap();\r\n        /**\r\n         * Applies a set of decorators to a property of a target object.\r\n         * @param decorators An array of decorators.\r\n         * @param target The target object.\r\n         * @param propertyKey (Optional) The property key to decorate.\r\n         * @param attributes (Optional) The property descriptor for the target key.\r\n         * @remarks Decorators are applied in reverse order.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Example = Reflect.decorate(decoratorsArray, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Object.defineProperty(Example, \"staticMethod\",\r\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n         *\r\n         *     // method (on prototype)\r\n         *     Object.defineProperty(Example.prototype, \"method\",\r\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n         *\r\n         */\r\n        function decorate(decorators, target, propertyKey, attributes) {\r\n            if (!IsUndefined(propertyKey)) {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                    throw new TypeError();\r\n                if (IsNull(attributes))\r\n                    attributes = undefined;\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n                return DecorateProperty(decorators, target, propertyKey, attributes);\r\n            }\r\n            else {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsConstructor(target))\r\n                    throw new TypeError();\r\n                return DecorateConstructor(decorators, target);\r\n            }\r\n        }\r\n        exporter(\"decorate\", decorate);\r\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n        /**\r\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n         * @param metadataKey The key for the metadata entry.\r\n         * @param metadataValue The value for the metadata entry.\r\n         * @returns A decorator function.\r\n         * @remarks\r\n         * If `metadataKey` is already defined for the target and target key, the\r\n         * metadataValue for that key will be overwritten.\r\n         * @example\r\n         *\r\n         *     // constructor\r\n         *     @Reflect.metadata(key, value)\r\n         *     class Example {\r\n         *     }\r\n         *\r\n         *     // property (on constructor, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticProperty;\r\n         *     }\r\n         *\r\n         *     // property (on prototype, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         property;\r\n         *     }\r\n         *\r\n         *     // method (on constructor)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticMethod() { }\r\n         *     }\r\n         *\r\n         *     // method (on prototype)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         method() { }\r\n         *     }\r\n         *\r\n         */\r\n        function metadata(metadataKey, metadataValue) {\r\n            function decorator(target, propertyKey) {\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                    throw new TypeError();\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n            }\r\n            return decorator;\r\n        }\r\n        exporter(\"metadata\", metadata);\r\n        /**\r\n         * Define a unique metadata entry on the target.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param metadataValue A value that contains attached metadata.\r\n         * @param target The target object on which to define metadata.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n         *\r\n         *     // decorator factory as metadata-producing annotation.\r\n         *     function MyAnnotation(options): Decorator {\r\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n         *     }\r\n         *\r\n         */\r\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        exporter(\"defineMetadata\", defineMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasMetadata\", hasMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getMetadata\", getMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadata\", getOwnMetadata);\r\n        /**\r\n         * Gets the metadata keys defined on the target object or its prototype chain.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getMetadataKeys\", getMetadataKeys);\r\n        /**\r\n         * Gets the unique metadata keys defined on the target object.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\r\n        /**\r\n         * Deletes the metadata entry from the target object with the provided key.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function deleteMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            if (!metadataMap.delete(metadataKey))\r\n                return false;\r\n            if (metadataMap.size > 0)\r\n                return true;\r\n            var targetMetadata = Metadata.get(target);\r\n            targetMetadata.delete(propertyKey);\r\n            if (targetMetadata.size > 0)\r\n                return true;\r\n            Metadata.delete(target);\r\n            return true;\r\n        }\r\n        exporter(\"deleteMetadata\", deleteMetadata);\r\n        function DecorateConstructor(decorators, target) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsConstructor(decorated))\r\n                        throw new TypeError();\r\n                    target = decorated;\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target, propertyKey, descriptor);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsObject(decorated))\r\n                        throw new TypeError();\r\n                    descriptor = decorated;\r\n                }\r\n            }\r\n            return descriptor;\r\n        }\r\n        function GetOrCreateMetadataMap(O, P, Create) {\r\n            var targetMetadata = Metadata.get(O);\r\n            if (IsUndefined(targetMetadata)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                targetMetadata = new _Map();\r\n                Metadata.set(O, targetMetadata);\r\n            }\r\n            var metadataMap = targetMetadata.get(P);\r\n            if (IsUndefined(metadataMap)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                metadataMap = new _Map();\r\n                targetMetadata.set(P, metadataMap);\r\n            }\r\n            return metadataMap;\r\n        }\r\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return true;\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n            return false;\r\n        }\r\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            return ToBoolean(metadataMap.has(MetadataKey));\r\n        }\r\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n            return undefined;\r\n        }\r\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return undefined;\r\n            return metadataMap.get(MetadataKey);\r\n        }\r\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n            metadataMap.set(MetadataKey, MetadataValue);\r\n        }\r\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n        function OrdinaryMetadataKeys(O, P) {\r\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (parent === null)\r\n                return ownKeys;\r\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n            if (parentKeys.length <= 0)\r\n                return ownKeys;\r\n            if (ownKeys.length <= 0)\r\n                return parentKeys;\r\n            var set = new _Set();\r\n            var keys = [];\r\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n                var key = ownKeys_1[_i];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n                var key = parentKeys_1[_a];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        }\r\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n        function OrdinaryOwnMetadataKeys(O, P) {\r\n            var keys = [];\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return keys;\r\n            var keysObj = metadataMap.keys();\r\n            var iterator = GetIterator(keysObj);\r\n            var k = 0;\r\n            while (true) {\r\n                var next = IteratorStep(iterator);\r\n                if (!next) {\r\n                    keys.length = k;\r\n                    return keys;\r\n                }\r\n                var nextValue = IteratorValue(next);\r\n                try {\r\n                    keys[k] = nextValue;\r\n                }\r\n                catch (e) {\r\n                    try {\r\n                        IteratorClose(iterator);\r\n                    }\r\n                    finally {\r\n                        throw e;\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        // 6 ECMAScript Data Typ0es and Values\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n        function Type(x) {\r\n            if (x === null)\r\n                return 1 /* Null */;\r\n            switch (typeof x) {\r\n                case \"undefined\": return 0 /* Undefined */;\r\n                case \"boolean\": return 2 /* Boolean */;\r\n                case \"string\": return 3 /* String */;\r\n                case \"symbol\": return 4 /* Symbol */;\r\n                case \"number\": return 5 /* Number */;\r\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n                default: return 6 /* Object */;\r\n            }\r\n        }\r\n        // 6.1.1 The Undefined Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n        function IsUndefined(x) {\r\n            return x === undefined;\r\n        }\r\n        // 6.1.2 The Null Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n        function IsNull(x) {\r\n            return x === null;\r\n        }\r\n        // 6.1.5 The Symbol Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n        function IsSymbol(x) {\r\n            return typeof x === \"symbol\";\r\n        }\r\n        // 6.1.7 The Object Type\r\n        // https://tc39.github.io/ecma262/#sec-object-type\r\n        function IsObject(x) {\r\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n        }\r\n        // 7.1 Type Conversion\r\n        // https://tc39.github.io/ecma262/#sec-type-conversion\r\n        // 7.1.1 ToPrimitive(input [, PreferredType])\r\n        // https://tc39.github.io/ecma262/#sec-toprimitive\r\n        function ToPrimitive(input, PreferredType) {\r\n            switch (Type(input)) {\r\n                case 0 /* Undefined */: return input;\r\n                case 1 /* Null */: return input;\r\n                case 2 /* Boolean */: return input;\r\n                case 3 /* String */: return input;\r\n                case 4 /* Symbol */: return input;\r\n                case 5 /* Number */: return input;\r\n            }\r\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n            if (exoticToPrim !== undefined) {\r\n                var result = exoticToPrim.call(input, hint);\r\n                if (IsObject(result))\r\n                    throw new TypeError();\r\n                return result;\r\n            }\r\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n        }\r\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n        function OrdinaryToPrimitive(O, hint) {\r\n            if (hint === \"string\") {\r\n                var toString_1 = O.toString;\r\n                if (IsCallable(toString_1)) {\r\n                    var result = toString_1.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            else {\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var toString_2 = O.toString;\r\n                if (IsCallable(toString_2)) {\r\n                    var result = toString_2.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            throw new TypeError();\r\n        }\r\n        // 7.1.2 ToBoolean(argument)\r\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n        function ToBoolean(argument) {\r\n            return !!argument;\r\n        }\r\n        // 7.1.12 ToString(argument)\r\n        // https://tc39.github.io/ecma262/#sec-tostring\r\n        function ToString(argument) {\r\n            return \"\" + argument;\r\n        }\r\n        // 7.1.14 ToPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-topropertykey\r\n        function ToPropertyKey(argument) {\r\n            var key = ToPrimitive(argument, 3 /* String */);\r\n            if (IsSymbol(key))\r\n                return key;\r\n            return ToString(key);\r\n        }\r\n        // 7.2 Testing and Comparison Operations\r\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n        // 7.2.2 IsArray(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isarray\r\n        function IsArray(argument) {\r\n            return Array.isArray\r\n                ? Array.isArray(argument)\r\n                : argument instanceof Object\r\n                    ? argument instanceof Array\r\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n        }\r\n        // 7.2.3 IsCallable(argument)\r\n        // https://tc39.github.io/ecma262/#sec-iscallable\r\n        function IsCallable(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.4 IsConstructor(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isconstructor\r\n        function IsConstructor(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.7 IsPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n        function IsPropertyKey(argument) {\r\n            switch (Type(argument)) {\r\n                case 3 /* String */: return true;\r\n                case 4 /* Symbol */: return true;\r\n                default: return false;\r\n            }\r\n        }\r\n        // 7.3 Operations on Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n        // 7.3.9 GetMethod(V, P)\r\n        // https://tc39.github.io/ecma262/#sec-getmethod\r\n        function GetMethod(V, P) {\r\n            var func = V[P];\r\n            if (func === undefined || func === null)\r\n                return undefined;\r\n            if (!IsCallable(func))\r\n                throw new TypeError();\r\n            return func;\r\n        }\r\n        // 7.4 Operations on Iterator Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n        function GetIterator(obj) {\r\n            var method = GetMethod(obj, iteratorSymbol);\r\n            if (!IsCallable(method))\r\n                throw new TypeError(); // from Call\r\n            var iterator = method.call(obj);\r\n            if (!IsObject(iterator))\r\n                throw new TypeError();\r\n            return iterator;\r\n        }\r\n        // 7.4.4 IteratorValue(iterResult)\r\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n        function IteratorValue(iterResult) {\r\n            return iterResult.value;\r\n        }\r\n        // 7.4.5 IteratorStep(iterator)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n        function IteratorStep(iterator) {\r\n            var result = iterator.next();\r\n            return result.done ? false : result;\r\n        }\r\n        // 7.4.6 IteratorClose(iterator, completion)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n        function IteratorClose(iterator) {\r\n            var f = iterator[\"return\"];\r\n            if (f)\r\n                f.call(iterator);\r\n        }\r\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n        function OrdinaryGetPrototypeOf(O) {\r\n            var proto = Object.getPrototypeOf(O);\r\n            if (typeof O !== \"function\" || O === functionPrototype)\r\n                return proto;\r\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n            // Try to determine the superclass constructor. Compatible implementations\r\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n            // or ensure each class has a valid `constructor` property on its prototype that\r\n            // points back to the constructor.\r\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n            if (proto !== functionPrototype)\r\n                return proto;\r\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n            var prototype = O.prototype;\r\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n            if (prototypeProto == null || prototypeProto === Object.prototype)\r\n                return proto;\r\n            // If the constructor was not a function, then we cannot determine the heritage.\r\n            var constructor = prototypeProto.constructor;\r\n            if (typeof constructor !== \"function\")\r\n                return proto;\r\n            // If we have some kind of self-reference, then we cannot determine the heritage.\r\n            if (constructor === O)\r\n                return proto;\r\n            // we have a pretty good guess at the heritage.\r\n            return constructor;\r\n        }\r\n        // naive Map shim\r\n        function CreateMapPolyfill() {\r\n            var cacheSentinel = {};\r\n            var arraySentinel = [];\r\n            var MapIterator = (function () {\r\n                function MapIterator(keys, values, selector) {\r\n                    this._index = 0;\r\n                    this._keys = keys;\r\n                    this._values = values;\r\n                    this._selector = selector;\r\n                }\r\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n                MapIterator.prototype.next = function () {\r\n                    var index = this._index;\r\n                    if (index >= 0 && index < this._keys.length) {\r\n                        var result = this._selector(this._keys[index], this._values[index]);\r\n                        if (index + 1 >= this._keys.length) {\r\n                            this._index = -1;\r\n                            this._keys = arraySentinel;\r\n                            this._values = arraySentinel;\r\n                        }\r\n                        else {\r\n                            this._index++;\r\n                        }\r\n                        return { value: result, done: false };\r\n                    }\r\n                    return { value: undefined, done: true };\r\n                };\r\n                MapIterator.prototype.throw = function (error) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    throw error;\r\n                };\r\n                MapIterator.prototype.return = function (value) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    return { value: value, done: true };\r\n                };\r\n                return MapIterator;\r\n            }());\r\n            return (function () {\r\n                function Map() {\r\n                    this._keys = [];\r\n                    this._values = [];\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                }\r\n                Object.defineProperty(Map.prototype, \"size\", {\r\n                    get: function () { return this._keys.length; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n                Map.prototype.get = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    return index >= 0 ? this._values[index] : undefined;\r\n                };\r\n                Map.prototype.set = function (key, value) {\r\n                    var index = this._find(key, /*insert*/ true);\r\n                    this._values[index] = value;\r\n                    return this;\r\n                };\r\n                Map.prototype.delete = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    if (index >= 0) {\r\n                        var size = this._keys.length;\r\n                        for (var i = index + 1; i < size; i++) {\r\n                            this._keys[i - 1] = this._keys[i];\r\n                            this._values[i - 1] = this._values[i];\r\n                        }\r\n                        this._keys.length--;\r\n                        this._values.length--;\r\n                        if (key === this._cacheKey) {\r\n                            this._cacheKey = cacheSentinel;\r\n                            this._cacheIndex = -2;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                Map.prototype.clear = function () {\r\n                    this._keys.length = 0;\r\n                    this._values.length = 0;\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                };\r\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n                Map.prototype._find = function (key, insert) {\r\n                    if (this._cacheKey !== key) {\r\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                    }\r\n                    if (this._cacheIndex < 0 && insert) {\r\n                        this._cacheIndex = this._keys.length;\r\n                        this._keys.push(key);\r\n                        this._values.push(undefined);\r\n                    }\r\n                    return this._cacheIndex;\r\n                };\r\n                return Map;\r\n            }());\r\n            function getKey(key, _) {\r\n                return key;\r\n            }\r\n            function getValue(_, value) {\r\n                return value;\r\n            }\r\n            function getEntry(key, value) {\r\n                return [key, value];\r\n            }\r\n        }\r\n        // naive Set shim\r\n        function CreateSetPolyfill() {\r\n            return (function () {\r\n                function Set() {\r\n                    this._map = new _Map();\r\n                }\r\n                Object.defineProperty(Set.prototype, \"size\", {\r\n                    get: function () { return this._map.size; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Set.prototype.has = function (value) { return this._map.has(value); };\r\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n                Set.prototype.clear = function () { this._map.clear(); };\r\n                Set.prototype.keys = function () { return this._map.keys(); };\r\n                Set.prototype.values = function () { return this._map.values(); };\r\n                Set.prototype.entries = function () { return this._map.entries(); };\r\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n                return Set;\r\n            }());\r\n        }\r\n        // naive WeakMap shim\r\n        function CreateWeakMapPolyfill() {\r\n            var UUID_SIZE = 16;\r\n            var keys = HashMap.create();\r\n            var rootKey = CreateUniqueKey();\r\n            return (function () {\r\n                function WeakMap() {\r\n                    this._key = CreateUniqueKey();\r\n                }\r\n                WeakMap.prototype.has = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\r\n                };\r\n                WeakMap.prototype.get = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n                };\r\n                WeakMap.prototype.set = function (target, value) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                    table[this._key] = value;\r\n                    return this;\r\n                };\r\n                WeakMap.prototype.delete = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? delete table[this._key] : false;\r\n                };\r\n                WeakMap.prototype.clear = function () {\r\n                    // NOTE: not a real clear, just makes the previous data unreachable\r\n                    this._key = CreateUniqueKey();\r\n                };\r\n                return WeakMap;\r\n            }());\r\n            function CreateUniqueKey() {\r\n                var key;\r\n                do\r\n                    key = \"@@WeakMap@@\" + CreateUUID();\r\n                while (HashMap.has(keys, key));\r\n                keys[key] = true;\r\n                return key;\r\n            }\r\n            function GetOrCreateWeakMapTable(target, create) {\r\n                if (!hasOwn.call(target, rootKey)) {\r\n                    if (!create)\r\n                        return undefined;\r\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n                }\r\n                return target[rootKey];\r\n            }\r\n            function FillRandomBytes(buffer, size) {\r\n                for (var i = 0; i < size; ++i)\r\n                    buffer[i] = Math.random() * 0xff | 0;\r\n                return buffer;\r\n            }\r\n            function GenRandomBytes(size) {\r\n                if (typeof Uint8Array === \"function\") {\r\n                    if (typeof crypto !== \"undefined\")\r\n                        return crypto.getRandomValues(new Uint8Array(size));\r\n                    if (typeof msCrypto !== \"undefined\")\r\n                        return msCrypto.getRandomValues(new Uint8Array(size));\r\n                    return FillRandomBytes(new Uint8Array(size), size);\r\n                }\r\n                return FillRandomBytes(new Array(size), size);\r\n            }\r\n            function CreateUUID() {\r\n                var data = GenRandomBytes(UUID_SIZE);\r\n                // mark as random - RFC 4122 § 4.4\r\n                data[6] = data[6] & 0x4f | 0x40;\r\n                data[8] = data[8] & 0xbf | 0x80;\r\n                var result = \"\";\r\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                    var byte = data[offset];\r\n                    if (offset === 4 || offset === 6 || offset === 8)\r\n                        result += \"-\";\r\n                    if (byte < 16)\r\n                        result += \"0\";\r\n                    result += byte.toString(16).toLowerCase();\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n        function MakeDictionary(obj) {\r\n            obj.__ = undefined;\r\n            delete obj.__;\r\n            return obj;\r\n        }\r\n    });\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}